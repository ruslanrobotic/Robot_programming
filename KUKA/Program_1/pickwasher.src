&ACCESS RVO1
&COMMENT 
&ACCESS RVP
&PARAM EDITMASK = *
&PARAM TEMPLATE = C:\KRC\Roboter\Template\vorgabe
&PARAM DISKPATH = KRC:\R1\Program
DEF pickwasher()
decl pos poz_vz_pal
decl int pallet1_num, ip, Z_pallet
DECL REAL low_z_pallet_pick
decl pos actual_pick_point_1, pallet_pick_point, prp1, prp2, prp9, prp4, prp5

; rotation to the pallet pick place
;FOLD PTP P1  Vel=100 % PDAT1 Tool[2]:tool_empty Base[7]:washerpick;%{PE}%R 8.3.22,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:P1, 3:, 5:100, 7:PDAT1
$BWDSTART=FALSE
PDAT_ACT=PPDAT1
FDAT_ACT=FP1
BAS(#PTP_PARAMS,100)
PTP XP1 
;ENDFOLD

; rising up
;FOLD LIN P2  Vel=2.00000 m/s CPDAT2 Tool[2]:tool_empty Base[7]:washerpick;%{PE}%R 8.3.22,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P2, 3:, 5:2.00000, 7:CPDAT2
$BWDSTART=FALSE
LDAT_ACT=LCPDAT2
FDAT_ACT=FP2
BAS(#CP_PARAMS,2.00000)
LIN XP2 
;ENDFOLD

; taking air in order not to avoid the hooks opening 
;FOLD SYN OUT 6 'Vacuum_cups'  State= TRUE  at END  Delay= 1500 ms;%{PE}%R 8.3.22,%MKUKATPBASIS,%COUT,%VSYNOUT,%P 2:6, 3:Vacuum_cups, 5:TRUE, 7:1, 9:0, 12:1500
TRIGGER WHEN DISTANCE=1 DELAY=1500 DO $OUT[6]=TRUE
;ENDFOLD

; stop preprocessor
$ADVANCE = 0

; checking signals from the sensor at the trajectory 
INTERRUPT DECL 11 WHEN ((Appr_sensor_signal_1) AND (Appr_sensor_signal_2))  DO STOP (pallet_pick_point, ip)
INTERRUPT ON 11 ; interrupt turn on

; checking signals from the sensor at the trajectory 
;FOLD LIN P4  Vel=2.00000 m/s CPDAT4 Tool[2]:tool_empty Base[7]:washerpick;%{PE}%R 8.3.22,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:P4, 3:, 5:2.00000, 7:CPDAT4
$BWDSTART=FALSE
LDAT_ACT=LCPDAT4
FDAT_ACT=FP4
BAS(#CP_PARAMS,2.00000)
LIN XP4 
;ENDFOLD

; interrupt turn off
INTERRUPT OFF 11

washer_pick_point = XP4
washer_pick_point.z = pallet_pick_point.z - 20 ; if washer was found than pulling down to if after the event when the sensor had found it

; sinking to the pick point
;FOLD LIN washer_pick_point  Vel=2.00000 m/s CPDAT4 Tool[2]:tool_empty Base[7]:washerpick;%{PE}%R 8.3.22,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:washer_pick_point, 3:, 5:2.00000, 7:CPDAT4
$BWDSTART=FALSE
LDAT_ACT=LCPDAT4
FDAT_ACT=Fwasher_pick_point
BAS(#CP_PARAMS,2.00000)
LIN Xwasher_pick_point 
;ENDFOLD

; movement relative to the actual_pick_point_1 to the defined length down
;FOLD OUT 7 'Vacuum_on'  State= TRUE;%{PE}%R 8.3.22,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:7, 3:Vacuum_on, 5:TRUE, 6:

$OUT[7]=TRUE
;ENDFOLD

; start preprocessor
$ADVANCE = 3

prp1 = washer_pick_point
prp1.z = prp1.z + 200 ; rising up to the defined length

;FOLD LIN prp1 CONT Vel=2.00000 m/s CPDAT5 Tool[4]:tool_pallet Base[7]:washerpick;%{PE}%R 8.3.22,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:prp1, 3:C_DIS C_DIS, 5:2.00000, 7:CPDAT5
$BWDSTART=FALSE
LDAT_ACT=LCPDAT5
FDAT_ACT=Fprp1
BAS(#CP_PARAMS,2.00000)
LIN Xprp1 C_DIS C_DIS
;ENDFOLD

END